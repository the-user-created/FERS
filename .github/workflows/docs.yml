name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # Fetch doxygen-awesome-css submodule

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            doxygen \
            graphviz \
            libhdf5-dev \
            libxml2-dev \
            xxd

      - name: Configure CMake
        run: >
          cmake -B build -S .
          -DCMAKE_BUILD_TYPE=Release
          -DFERS_BUILD_DOCS=ON

      - name: Build documentation
        # This command runs the 'doc' target defined in your CMakeLists
        run: cmake --build build --target doc

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This path must match the Doxygen OUTPUT_DIRECTORY relative to the build dir
          path: './build/docs/html'

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
